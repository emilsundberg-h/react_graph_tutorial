{"ast":null,"code":"import * as tslib_1 from \"tslib\";\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * @hidden\r\n */\n\nvar ResponseUtils =\n/** @class */\nfunction () {\n  function ResponseUtils() {}\n\n  ResponseUtils.setResponseIdToken = function (originalResponse, idTokenObj) {\n    if (!originalResponse) {\n      return null;\n    } else if (!idTokenObj) {\n      return originalResponse;\n    }\n\n    var exp = Number(idTokenObj.expiration);\n\n    if (exp && !originalResponse.expiresOn) {\n      originalResponse.expiresOn = new Date(exp * 1000);\n    }\n\n    return tslib_1.__assign({}, originalResponse, {\n      idToken: idTokenObj,\n      idTokenClaims: idTokenObj.claims,\n      uniqueId: idTokenObj.objectId || idTokenObj.subject,\n      tenantId: idTokenObj.tenantId\n    });\n  };\n\n  return ResponseUtils;\n}();\n\nexport { ResponseUtils };","map":{"version":3,"sources":["../../src/utils/ResponseUtils.ts"],"names":[],"mappings":";AAGA;;;;;AAKA;;;;AAGA,IAAA,aAAA;AAAA;AAAA,YAAA;AAAA,WAAA,aAAA,GAAA,CAsBC;;AApBU,EAAA,aAAA,CAAA,kBAAA,GAAP,UAA0B,gBAA1B,EAA0D,UAA1D,EAA6E;AACzE,QAAI,CAAC,gBAAL,EAAuB;AACnB,aAAO,IAAP;AACH,KAFD,MAEO,IAAI,CAAC,UAAL,EAAiB;AACpB,aAAO,gBAAP;AACH;;AAED,QAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,UAAZ,CAAlB;;AACA,QAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAA7B,EAAwC;AACpC,MAAA,gBAAgB,CAAC,SAAjB,GAA6B,IAAI,IAAJ,CAAS,GAAG,GAAG,IAAf,CAA7B;AACH;;AAED,WAAA,OAAA,CAAA,QAAA,CAAA,EAAA,EACO,gBADP,EACuB;AACnB,MAAA,OAAO,EAAE,UADU;AAEnB,MAAA,aAAa,EAAE,UAAU,CAAC,MAFP;AAGnB,MAAA,QAAQ,EAAE,UAAU,CAAC,QAAX,IAAuB,UAAU,CAAC,OAHzB;AAInB,MAAA,QAAQ,EAAE,UAAU,CAAC;AAJF,KADvB,CAAA;AAOH,GAnBM;;AAoBX,SAAA,aAAA;AAAC,CAtBD,EAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nvar ResponseUtils = /** @class */ (function () {\r\n    function ResponseUtils() {\r\n    }\r\n    ResponseUtils.setResponseIdToken = function (originalResponse, idTokenObj) {\r\n        if (!originalResponse) {\r\n            return null;\r\n        }\r\n        else if (!idTokenObj) {\r\n            return originalResponse;\r\n        }\r\n        var exp = Number(idTokenObj.expiration);\r\n        if (exp && !originalResponse.expiresOn) {\r\n            originalResponse.expiresOn = new Date(exp * 1000);\r\n        }\r\n        return tslib_1.__assign({}, originalResponse, { idToken: idTokenObj, idTokenClaims: idTokenObj.claims, uniqueId: idTokenObj.objectId || idTokenObj.subject, tenantId: idTokenObj.tenantId });\r\n    };\r\n    return ResponseUtils;\r\n}());\r\nexport { ResponseUtils };\r\n//# sourceMappingURL=ResponseUtils.js.map"]},"metadata":{},"sourceType":"module"}