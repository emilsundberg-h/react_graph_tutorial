{"ast":null,"code":"var _jsxFileName = \"/Users/emilsundberg/graph-tutorial3/src/Calendar.js\";\nimport React from 'react';\nimport { Table } from 'reactstrap';\nimport moment from 'moment';\nimport config from './Config';\nimport { getEvents } from './GraphService'; // Helper function to format Graph date/time\n\nfunction formatDateTime(dateTime) {\n  return moment.utc(dateTime).local().format('M/D/YY h:mm A');\n}\n\nexport default class Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      // Get the user's access token\n      var accessToken = await window.msal.acquireTokenSilent({\n        scopes: config.scopes\n      }); // Get the user's events\n\n      var events = await getEvents(accessToken); // Update the array of events in state\n\n      this.setState({\n        events: events.value\n      });\n    } catch (err) {\n      this.props.showError('ERROR', JSON.stringify(err));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Calendar\"), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, \"Organizer\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, \"Subject\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, \"Start\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, \"End\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, this.state.events.map(function (event) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: event.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, event.organizer.emailAddress.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, event.subject), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, formatDateTime(event.start.dateTime)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, formatDateTime(event.end.dateTime)));\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/emilsundberg/graph-tutorial3/src/Calendar.js"],"names":["React","Table","moment","config","getEvents","formatDateTime","dateTime","utc","local","format","Calendar","Component","constructor","props","state","events","componentDidMount","accessToken","window","msal","acquireTokenSilent","scopes","setState","value","err","showError","JSON","stringify","render","map","event","id","organizer","emailAddress","name","subject","start","end"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,gBAA1B,C,CAEA;;AACA,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChC,SAAOJ,MAAM,CAACK,GAAP,CAAWD,QAAX,EAAqBE,KAArB,GAA6BC,MAA7B,CAAoC,eAApC,CAAP;AACD;;AAED,eAAe,MAAMC,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,QAAI;AACF;AACA,UAAIC,WAAW,GAAG,MAAMC,MAAM,CAACC,IAAP,CAAYC,kBAAZ,CAA+B;AACrDC,QAAAA,MAAM,EAAElB,MAAM,CAACkB;AADsC,OAA/B,CAAxB,CAFE,CAKF;;AACA,UAAIN,MAAM,GAAG,MAAMX,SAAS,CAACa,WAAD,CAA5B,CANE,CAOF;;AACA,WAAKK,QAAL,CAAc;AAACP,QAAAA,MAAM,EAAEA,MAAM,CAACQ;AAAhB,OAAd;AACD,KATD,CAUA,OAAMC,GAAN,EAAW;AACT,WAAKX,KAAL,CAAWY,SAAX,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeH,GAAf,CAA9B;AACD;AACF;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,eAIE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CADF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKd,KAAL,CAAWC,MAAX,CAAkBc,GAAlB,CACC,UAASC,KAAT,EAAe;AACb,0BACE;AAAI,QAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,KAAK,CAACE,SAAN,CAAgBC,YAAhB,CAA6BC,IAAlC,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKJ,KAAK,CAACK,OAAX,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK9B,cAAc,CAACyB,KAAK,CAACM,KAAN,CAAY9B,QAAb,CAAnB,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,cAAc,CAACyB,KAAK,CAACO,GAAN,CAAU/B,QAAX,CAAnB,CAJF,CADF;AAQD,KAVF,CADH,CATF,CAFF,CADF;AA4BD;;AAtDmD","sourcesContent":["import React from 'react';\nimport { Table } from 'reactstrap';\nimport moment from 'moment';\nimport config from './Config';\nimport { getEvents } from './GraphService';\n\n// Helper function to format Graph date/time\nfunction formatDateTime(dateTime) {\n  return moment.utc(dateTime).local().format('M/D/YY h:mm A');\n}\n\nexport default class Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      events: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      // Get the user's access token\n      var accessToken = await window.msal.acquireTokenSilent({\n        scopes: config.scopes\n      });\n      // Get the user's events\n      var events = await getEvents(accessToken);\n      // Update the array of events in state\n      this.setState({events: events.value});\n    }\n    catch(err) {\n      this.props.showError('ERROR', JSON.stringify(err));\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Calendar</h1>\n        <Table>\n          <thead>\n            <tr>\n              <th scope=\"col\">Organizer</th>\n              <th scope=\"col\">Subject</th>\n              <th scope=\"col\">Start</th>\n              <th scope=\"col\">End</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.events.map(\n              function(event){\n                return(\n                  <tr key={event.id}>\n                    <td>{event.organizer.emailAddress.name}</td>\n                    <td>{event.subject}</td>\n                    <td>{formatDateTime(event.start.dateTime)}</td>\n                    <td>{formatDateTime(event.end.dateTime)}</td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}